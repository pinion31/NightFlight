{"version":3,"sources":["webpack:///./js/app.js","webpack:///./sass/style.scss","webpack:///./js/components/RoutedApp.jsx","webpack:///./js/components/YelpList.jsx"],"names":["render","document","getElementById","module","hot","accept","NoMatch","Login","MainContent","Footer","RoutedApp","YelpList","props","state","barList","query","attendeeList","list","showModal","retrieveSearchData","bind","setQuery","addSelf","toggleGoingModal","e","setState","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","name","match","params","id","then","res","json","result","parse","username","map","key","titleFontSize","length","addressBar","address","image_url","RSVPmessage","city","zipcode","goingMessage","stars","attendee","propTypes","PropTypes","array","string","object","bool"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import React from 'react';\r\nimport 'babel-polyfill';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter, BrowserRouter} from 'react-router-dom';\r\nimport '../sass/style.scss';\r\nimport RoutedApp from './components/RoutedApp';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <RoutedApp />\r\n  </HashRouter>,\r\n  document.getElementById('app'),\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/app.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/style.scss\n// module id = 649\n// module chunks = 0","import React from 'react';\r\nimport {Route} from 'react-router';\r\nimport {Switch} from 'react-router-dom';\r\nimport YelpList from './YelpList';\r\n\r\n\r\nconst NoMatch = () => <h2>This page does not exist! Please go back!</h2>;\r\n\r\nconst Login = () => (\r\n  <div className=\"login\">\r\n    <a href=\"/auth/twitter\">\r\n      <img src=\"twitterbutton.png\" alt=\"sign in with twitter\" />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst MainContent = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Login} />\r\n    <Route path=\"/search/:id\" component={YelpList} />\r\n    <Route path=\"*\" component={NoMatch} />\r\n  </Switch>\r\n);\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <div />\r\n  </div>\r\n);\r\n\r\nconst RoutedApp = () => (\r\n  <div>\r\n    <h1 className=\"homePageTitle\">Night Flight</h1>\r\n    <h1 className=\"homePageTagline\">Let Your Friends Know Where You Are Going Tonight.</h1>\r\n    <MainContent />\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default RoutedApp;\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/components/RoutedApp.jsx","import React, {Component} from 'react';\r\nimport {Col, Row, Button, FormGroup, FormControl, Form, Modal, Image, Media} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\n\r\n\r\nclass YelpList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      barList: [],\r\n      query: '',\r\n      attendeeList: {list: []},\r\n      showModal: false,\r\n    };\r\n\r\n    this.retrieveSearchData = this.retrieveSearchData.bind(this);\r\n    this.setQuery = this.setQuery.bind(this);\r\n    this.addSelf = this.addSelf.bind(this);\r\n    this.toggleGoingModal = this.toggleGoingModal.bind(this);\r\n  }\r\n\r\n  setQuery(e) {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  }\r\n\r\n  retrieveSearchData(e) {\r\n    e.preventDefault();\r\n\r\n    fetch('/list', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({query: this.state.query, name: this.props.match.params.id}),\r\n    }).then((res) => {\r\n      res.json().then((result) => {\r\n        this.setState({\r\n          barList: JSON.parse(result),\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  toggleGoingModal(e) {\r\n    if (!this.state.showModal) {\r\n      fetch('/getAttendees', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({id: e.target.name}),\r\n      }).then((res) => {\r\n        res.json().then((result) => {\r\n          this.setState({\r\n            showModal: true,\r\n            attendeeList: result,\r\n          });\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showModal: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  addSelf(e) {\r\n    fetch('/addSelf', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({username: this.props.match.params.id, id: e.target.name}),\r\n    }).then((res) => {\r\n      res.json().then((result) => {\r\n        this.setState({\r\n          barList: JSON.parse(result),\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Col md={9} mdOffset={2} sm={9} smOffset={2} xs={10} xsOffset={1} lg={9} lgOffset={2}>\r\n          <Form inline>\r\n            <FormGroup className=\"search-field\">\r\n              <FormControl\r\n                name=\"query\"\r\n                type=\"text\"\r\n                placeholder=\"City, State\"\r\n                onChange={this.setQuery}\r\n                maxLength=\"47\"\r\n              />\r\n              <Button bsStyle=\"info\" className=\"search-button\" onClick={this.retrieveSearchData}>Search</Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n        {this.state.barList.map((result, key) => {\r\n          const titleFontSize = result.name.length > 20 ? 'small-title' : 'large-title';\r\n          const addressBar = result.address.length === 0 ? 'No Street Address' : result.address;\r\n\r\n          return (\r\n            <div key={key}>\r\n              <Col md={8} mdOffset={2} sm={12} xs={12} lg={8} lgOffset={2}>\r\n                <Media className=\"card\">\r\n                  <Media.Left align=\"top\">\r\n                    <Image className=\"clubImage\" src={result.image_url} alt={result.name} />\r\n                  </Media.Left>\r\n                  <Media.Body>\r\n                    <p className={`card-title ${titleFontSize}`}>{result.name}</p>\r\n                    <Button className=\"RSVP\" bsStyle=\"danger\" name={result.id} onClick={this.addSelf}>{result.RSVPmessage}</Button>\r\n                    <div className=\"address\">\r\n                      <p>{addressBar}</p>\r\n                      <p>{`${result.city}, ${result.state} ${result.zipcode}`}</p>\r\n                    </div>\r\n                    <Row>\r\n                      <Col md={8} mdOffset={2} sm={12} xs={12} lg={12} lgOffset={0}>\r\n                        <div className=\"cardBottom\">\r\n                          <p className=\"going-message\">{result.goingMessage}</p>\r\n                          <p className=\"rating-message\">{`Rating: ${result.stars}`}</p>\r\n                          <Button name={result.id} className=\"goingButton\" bsStyle=\"danger\" onClick={this.toggleGoingModal}>{\"See Who's Going\"}</Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Media.Body>\r\n                </Media>\r\n              </Col>\r\n            </div>\r\n          );\r\n        })\r\n        }\r\n        <Modal\r\n          show={this.state.showModal}\r\n          bsSize=\"small\"\r\n          aria-labelledby=\"contained-modal-title-sm\"\r\n          onHide={this.toggleGoingModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-sm\">Club Attendees</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.attendeeList.list.map((attendee, key) =>\r\n              (<a key={key} href={`https://twitter.com/${attendee}`} target=\"_blank\">\r\n                <b>{`@${attendee},`}\r\n                </b>\r\n              </a>)\r\n            )\r\n            }\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"goingButton\" onClick={this.toggleGoingModal}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nYelpList.propTypes = {\r\n  barList: React.PropTypes.array,\r\n  query: React.PropTypes.string,\r\n  attendeeList: React.PropTypes.object,\r\n  showModal: React.PropTypes.bool,\r\n};\r\n\r\nexport default YelpList;\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/components/YelpList.jsx"],"sourceRoot":""}